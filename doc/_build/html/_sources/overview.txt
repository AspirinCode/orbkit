Overview
=========

orbkit is a parallel Python program package for post-processing 
wavefunction data, i.e., atomic and molecular orbitals, extracted 
from output files of MOLPRO_ (Molden File Format), TURBOMOLE_ (Molden file format), 
GAMESS-US_, and Gaussian_ (.log File and Formatted Checkpoint File). 

Computational capabilities for arbitrary grids:

- Atomic orbitals, molecular orbitals, electron density, and the spatial derivatives of these quantities
- Reduced electron density
- Electron density for selected molecular orbitals
- Atom-projected electron density
- Molecular orbital transition electronic flux density

A list of currently
implemented features (and limitations) can be found in the :doc:`overview`
to check the suitability of orbkit for your problem. An instruction
for the easy usage of orbkit and the functional principles are described
in the :doc:`manual` section. The several functions can be separately used
and can be easily implemented in your own program. 

The orbkit support team, Axel, Gunter, and Vincent, welcomes every new
user and will be available to answer your questions. For any change
requests, do not hesitate to contact the orbkit support team.

:Website: http://sourceforge.net/p/orbkit

Citation
--------

If you use orbkit in your work, please cite it as follows:

Gunter Hermann, Vincent Pohl, Axel Schild: orbkit: A Toolbox for Post-Processing 
Quantum Chemical Wavefunction Data, available via http://sourceforge.net/p/orbkit (2014).


.. _MOLPRO: https://www.molpro.net/
.. _TURBOMOLE: http://www.turbomole.com/
.. _Gamess-US: http://www.msg.chem.iastate.edu/gamess/
.. _Gaussian: http://www.gaussian.com/
.. _ZIBAmira: http://amira.zib.de/


Features of orbkit
------------------

orbkit enables the user the calculation of atomic orbitals, molecular
orbitals and densities and derivatives thereof on arbitrary grids. 
This grid can be generated user defined in different
ways and it can be centered to a selected atom and the origin. 

By default, orbkit loads the required data from Molden files which
can be created with MOLPRO_ or TURBOMOLE_. Other readable output formats
are Gaussian_ (.fchk or .log) or Gamess-US_ output files.

The centerpiece of orbkit, the :mod:`orbkit.core` python module, offers
a variety of calculation options. The user can choose the computation
and the storage of all or just selected molecular orbitals or derivatives thereof. 
The density or derivatives thereof can be calculated from all or just from several 
molecular orbitals. The selection of the molecular orbitals is realized by an 
external file. Example files, for the usage of the major features of orbkit, are
available in the program package. 

orbkit can construct different types of output files with the help
of the output Creator :mod:`orbkit.output`. The output formats include
cube files, HDF5 files, and ZIBAmira_ Mesh files. orbkit can create
a ZIBAmira_ network which enables the easy depiction of the densities
or molecular orbitals with ZIBAmira_.

.. _MOLPRO: https://www.molpro.net/
.. _TURBOMOLE: http://www.turbomole.com/
.. _Gamess-US: http://www.msg.chem.iastate.edu/gamess/
.. _Gaussian: http://www.gaussian.com/
.. _ZIBAmira: http://amira.zib.de/


Limitations of orbkit
---------------------

One limitation of orbkit is the ability to calculate only s, p, d, f and g atomic 
orbitals (Molden file limitation).

For calculation of the atomic orbitals and Molecular orbitals, orbkit requires 
Cartesian Gaussians. The usage of spherical Gaussian functions is not yet possible. 
